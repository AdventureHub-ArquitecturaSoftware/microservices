buildscript {
	ext {
		springBootVersion = '2.3.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example.reservationservice'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8

ext {
	mapstructVersion = "1.3.1.Final"
	springCloudVersion = "Hoxton.SR6"
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation project(':api')
//	implementation project(':util')
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java'
	testImplementation('io.projectreactor:reactor-test')
	implementation 'org.projectlombok:lombok:1.18.20'
	implementation("org.mapstruct:mapstruct:${mapstructVersion}")
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')


	compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

targetCompatibility = JavaVersion.VERSION_1_9
